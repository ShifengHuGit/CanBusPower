<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\can_device_qs.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\can_device_qs.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 484]: Last Updated: Sun Feb 07 21:05:59 2021
<BR><P>
<H3>Maximum Stack Usage =        152 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ProcessCmd &rArr; ShowQQCharL &rArr; WRDataL &rArr; SendByteLCDL
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[233b7a4]">Reset_Handler</a>
 <LI><a href="#[233b984]">NmiSR</a>
 <LI><a href="#[233b948]">FaultISR</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[233bc54]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[233bc54]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[233bc90]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[233bc90]">UARTCharPut</a><BR>
 <LI><a href="#[233a8a4]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[233a8a4]">SysCtlDelay</a><BR>
 <LI><a href="#[233b984]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[233b984]">NmiSR</a><BR>
 <LI><a href="#[233b948]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[233b948]">FaultISR</a><BR>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[233b90c]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[233b7a4]">Reset_Handler</a>
 <LI><a href="#[233b984]">NmiSR</a>
 <LI><a href="#[233b948]">FaultISR</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233c44c]">SysTickIntHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233c3d4]">CANHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233b90c]">IntDefaultHandler</a>
 <LI><a href="#[233c2a8]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[233b7a4]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[23d7404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[23d7404]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Calls]<UL><LI><a href="#[23d6e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[233b7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[23d73c8]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[23d6e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[23d7080]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[23d6f54]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry6.o(.ARM.Collect$$$$00000006))

<P><STRONG><a name="[233a8a4]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[233a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[233a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
<LI><a href="#[233af70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_us
<LI><a href="#[233afac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
<LI><a href="#[233bdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[233be70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[2333b30]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[2333af4]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[233beac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[232f24c]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[233c488]"></a>to_hex</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, can_device_qs.o(.text), UNUSED)

<P><STRONG><a name="[233c44c]"></a>SysTickIntHandler</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, can_device_qs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTickIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[233c014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[233c410]"></a>UARTSend</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, can_device_qs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233bc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>

<P><STRONG><a name="[233c3d4]"></a>CANHandler</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, can_device_qs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CANHandler &rArr; CANMessageGet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[233c08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[233c104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[233c140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[233c1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[233c398]"></a>CANConfigureNetwork</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, can_device_qs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CANConfigureNetwork &rArr; CANMessageSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[233c0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233c35c]"></a>SendButtonMsg</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, can_device_qs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233c0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
</UL>
<BR>[Called By]<UL><LI><a href="#[233c320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInterrupts
</UL>

<P><STRONG><a name="[233c320]"></a>ProcessInterrupts</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, can_device_qs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[233c35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendButtonMsg
</UL>

<P><STRONG><a name="[233c2e4]"></a>ProcessCmd</STRONG> (Thumb, 318 bytes, Stack size 64 bytes, can_device_qs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ProcessCmd &rArr; ShowQQCharL &rArr; WRDataL &rArr; SendByteLCDL
</UL>
<BR>[Calls]<UL><LI><a href="#[233bc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[233be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[233c104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233c2a8]"></a>main</STRONG> (Thumb, 378 bytes, Stack size 24 bytes, can_device_qs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = main &rArr; ProcessCmd &rArr; ShowQQCharL &rArr; WRDataL &rArr; SendByteLCDL
</UL>
<BR>[Calls]<UL><LI><a href="#[233bc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFIFODisable
<LI><a href="#[233bc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[233bc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[233bccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[233bd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[233bd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[233bd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[233bdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[233bdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[233be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[233be70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[233beac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[233bee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[233bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[233bf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[233bfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[233c050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[233c17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[233c1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[233c230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[233c26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANBitTimingSet
<LI><a href="#[233c2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
<LI><a href="#[233c398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigureNetwork
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry6.o(.ARM.Collect$$$$00000006)
</UL>
<P><STRONG><a name="[233afac]"></a>Syswait_ms</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[233bdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>

<P><STRONG><a name="[233af70]"></a>Syswait_us</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[233bdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>

<P><STRONG><a name="[233af34]"></a>E2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[233aef8]"></a>E1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[233aebc]"></a>RW</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[233ae80]"></a>RS</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[233ae44]"></a>REST</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[233ae08]"></a>SendByteLCDH</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SendByteLCDH
</UL>
<BR>[Calls]<UL><LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[233ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
<LI><a href="#[233adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWH
</UL>

<P><STRONG><a name="[233adcc]"></a>SPIWH</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDH
</UL>

<P><STRONG><a name="[233ad90]"></a>WRCommandH</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WRCommandH &rArr; SendByteLCDH
</UL>
<BR>[Calls]<UL><LI><a href="#[233a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[233ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDH
<LI><a href="#[233bdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[233a9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTEST
<LI><a href="#[233aa0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[233aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAMH
<LI><a href="#[233aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharH
<LI><a href="#[233ab74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAMH
<LI><a href="#[233abec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharH
<LI><a href="#[233ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
<LI><a href="#[233be70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[233ad54]"></a>WRDataH</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDH
<LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[233a9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTEST
<LI><a href="#[233aa0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[233aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAMH
<LI><a href="#[233aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharH
<LI><a href="#[233ab74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAMH
<LI><a href="#[233abec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharH
<LI><a href="#[233ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
</UL>

<P><STRONG><a name="[233ad18]"></a>SendByteLCDL</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SendByteLCDL
</UL>
<BR>[Calls]<UL><LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[233ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[233acdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWL
</UL>

<P><STRONG><a name="[233acdc]"></a>SPIWL</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDL
</UL>

<P><STRONG><a name="[233aca0]"></a>WRCommandL</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WRCommandL &rArr; SendByteLCDL
</UL>
<BR>[Calls]<UL><LI><a href="#[233a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[233ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDL
<LI><a href="#[233bdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[233a9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTEST
<LI><a href="#[233aa0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[233aa48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAML
<LI><a href="#[233aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharL
<LI><a href="#[233ab38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAML
<LI><a href="#[233abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharL
<LI><a href="#[233be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[233be70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[233ac64]"></a>WRDataL</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WRDataL &rArr; SendByteLCDL
</UL>
<BR>[Calls]<UL><LI><a href="#[233ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDL
<LI><a href="#[233bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[233a9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTEST
<LI><a href="#[233aa0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[233aa48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAML
<LI><a href="#[233aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharL
<LI><a href="#[233ab38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAML
<LI><a href="#[233abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharL
<LI><a href="#[233be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
</UL>

<P><STRONG><a name="[233be70]"></a>LCDInit</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCDInit &rArr; WRCommandL &rArr; SendByteLCDL
</UL>
<BR>[Calls]<UL><LI><a href="#[233a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
<LI><a href="#[233bdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233ac28]"></a>ShowQQCharH</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>
<BR>[Called By]<UL><LI><a href="#[233a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayEngine
<LI><a href="#[233a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE2
<LI><a href="#[233a958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE1
<LI><a href="#[233a994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE
</UL>

<P><STRONG><a name="[233be34]"></a>ShowQQCharL</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ShowQQCharL &rArr; WRDataL &rArr; SendByteLCDL
</UL>
<BR>[Calls]<UL><LI><a href="#[233ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>
<BR>[Called By]<UL><LI><a href="#[233a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayEngine
<LI><a href="#[233a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE2
<LI><a href="#[233a958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE1
<LI><a href="#[233a994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE
<LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[233c2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
</UL>

<P><STRONG><a name="[233abec]"></a>ShowNUMCharH</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[233abb0]"></a>ShowNUMCharL</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[233ab74]"></a>WRCGRAMH</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[233ab38]"></a>WRCGRAML</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[233aafc]"></a>ShowCGCharH</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[233aac0]"></a>ShowCGCharL</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[233aa84]"></a>CLEARGDRAMH</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[233aa48]"></a>CLEARGDRAML</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[233aa0c]"></a>WRGDRAM1</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[233ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[233a9d0]"></a>displayTEST</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[233ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[233a994]"></a>displayCHINSE</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
<LI><a href="#[233be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
</UL>

<P><STRONG><a name="[233a958]"></a>displayCHINSE1</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
<LI><a href="#[233be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
</UL>

<P><STRONG><a name="[233a91c]"></a>displayCHINSE2</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
<LI><a href="#[233be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
</UL>

<P><STRONG><a name="[233a8e0]"></a>displayEngine</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
<LI><a href="#[233be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
</UL>

<P><STRONG><a name="[23d6e28]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23d73c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[23d7404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[23d6dec]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[23d6900]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[23d68c4]"></a>__decompress1</STRONG> (Thumb, 88 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[233c26c]"></a>CANBitTimingSet</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, can.o(i.CANBitTimingSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANBitTimingSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233c230]"></a>CANEnable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, can.o(i.CANEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CANEnable &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233c1f4]"></a>CANInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, can.o(i.CANInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANInit &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233c1b8]"></a>CANIntClear</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, can.o(i.CANIntClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntClear &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[233c3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[233c17c]"></a>CANIntEnable</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, can.o(i.CANIntEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntEnable &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233c140]"></a>CANIntStatus</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, can.o(i.CANIntStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntStatus &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[233c3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[233c104]"></a>CANMessageGet</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, can.o(i.CANMessageGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CANMessageGet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
<LI><a href="#[233c3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[233c0c8]"></a>CANMessageSet</STRONG> (Thumb, 496 bytes, Stack size 40 bytes, can.o(i.CANMessageSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CANMessageSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[233c35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendButtonMsg
<LI><a href="#[233c398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigureNetwork
</UL>

<P><STRONG><a name="[233c08c]"></a>CANStatusGet</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, can.o(i.CANStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANStatusGet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[233c3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[23354bc]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[233bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[233bf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[233bfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
</UL>

<P><STRONG><a name="[233c050]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[233bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[233bf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[233bfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233c014]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[233c44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[233bfd8]"></a>GPIOPinTypeCAN</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeCAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeCAN
</UL>
<BR>[Calls]<UL><LI><a href="#[23354bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[233c050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bf9c]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[23354bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[233c050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bf60]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[23354bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[233c050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bf24]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[233ac64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[233ad18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDL
<LI><a href="#[233ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
<LI><a href="#[233ae08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDH
<LI><a href="#[233ae44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REST
<LI><a href="#[233ae80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
<LI><a href="#[233aebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RW
<LI><a href="#[233aef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E1
<LI><a href="#[233af34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2
<LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[233c2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
<LI><a href="#[233c320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInterrupts
<LI><a href="#[233c44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[23380cc]"></a>IntDisable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>

<P><STRONG><a name="[233bee8]"></a>IntEnable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[2338c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
<LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233beac]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[2333af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bdf8]"></a>SysCtlClockGet</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[233aca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[233ad90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
<LI><a href="#[233af70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_us
<LI><a href="#[233afac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
<LI><a href="#[233be70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bdbc]"></a>SysCtlClockSet</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[233a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bd80]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bd44]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bd08]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bccc]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bc90]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[233bc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[233bc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[233c2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
<LI><a href="#[233c410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>

<P><STRONG><a name="[233bc54]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[233bc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[233bc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233bc18]"></a>UARTFIFODisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UARTFIFODisable))
<BR><BR>[Called By]<UL><LI><a href="#[233c2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23d6a68]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[23d6a2c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[23d69f0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[233b984]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[233b984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[233b984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[233b948]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[233b948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[233b948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[233b90c]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[233b90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[233b90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2338c84]"></a>CANRegRead</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, can.o(i.CANRegRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[23380cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
<LI><a href="#[233bee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[233c08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[233c0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[233c104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[233c140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[233c17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[233c1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
<LI><a href="#[233c1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[233c230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[233c26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANBitTimingSet
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
