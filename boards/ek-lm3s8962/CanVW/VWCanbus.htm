<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [G:\Git\CanBusPower\boards\ek-lm3s8962\CanVW\VWCanbus.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image G:\Git\CanBusPower\boards\ek-lm3s8962\CanVW\VWCanbus.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 484]: Last Updated: Thu Feb 18 17:36:29 2021
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; ECU_Session_setup &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[226761c]">Reset_Handler</a>
 <LI><a href="#[2267694]">__user_initial_stackheap</a>
 <LI><a href="#[22677c0]">NmiSR</a>
 <LI><a href="#[2267784]">FaultISR</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2262edc]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2262edc]">UARTCharPut</a><BR>
 <LI><a href="#[22677c0]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22677c0]">NmiSR</a><BR>
 <LI><a href="#[2267784]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2267784]">FaultISR</a><BR>
 <LI><a href="#[2267748]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2267748]">IntDefaultHandler</a><BR>
 <LI><a href="#[2262ea0]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2262ea0]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[2265aec]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2265aec]">SysCtlDelay</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[226761c]">Reset_Handler</a>
 <LI><a href="#[22677c0]">NmiSR</a>
 <LI><a href="#[2267784]">FaultISR</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[22675e0]">CANHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2267748]">IntDefaultHandler</a>
 <LI><a href="#[2ef6be4]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[226761c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2efac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2efac1c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2ef4538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2efaaf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[226761c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[2ef4538]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2efac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2ef44fc]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2efaaf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2ef44c0]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2ef4484]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2ef4664]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[2ef4628]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[2ef42e0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2ef9b3c]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2efa49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[2ef800c]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[2ef8084]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[2ef8444]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[2ef82dc]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[2ef7f1c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[2ef7f94]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[2ef8354]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[2ef8264]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[2ef8840]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[2ef869c]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[2ef8624]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[2ef85ac]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[2ef8534]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[2ef84bc]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[2ef8750]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[2ef7ee0]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[2ef83cc]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[2ef81ec]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[2ef87c8]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[2ef6f2c]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2ef7760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[2ef62c0]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[2ef60e0]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[2ef60a4]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[2ef620c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[2ef6374]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[2ef6194]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[2efaaf0]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2ef44fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2efac1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2efa550]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2efa1cc]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2efa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2efa49c]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2ef9b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[2efa4d8]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2efa3e8]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; ECU_Session_setup &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2ef9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2efa424]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2ef93bc]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2ef9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2ef7760]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2ef6f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[2ef779c]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[2ef7724]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2ef7418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2265aec]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[2265aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[2262f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[2265aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[226635c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_us
<LI><a href="#[2266398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
</UL>

<P><STRONG><a name="[225b9e8]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[225b9ac]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2262f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[2efeb64]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[2267694]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2efa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2266398]"></a>Syswait_ms</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Syswait_ms &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2265aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2265b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2266014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[226635c]"></a>Syswait_us</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Syswait_us &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2265aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2265b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[2266320]"></a>E2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = E2
</UL>
<BR>[Calls]<UL><LI><a href="#[2265b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2266104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDL
</UL>

<P><STRONG><a name="[22662e4]"></a>E1</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = E1
</UL>
<BR>[Calls]<UL><LI><a href="#[2265b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[22661f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDH
</UL>

<P><STRONG><a name="[22662a8]"></a>RW</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RW
</UL>
<BR>[Calls]<UL><LI><a href="#[2265b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2266104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDL
<LI><a href="#[22661f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDH
</UL>

<P><STRONG><a name="[226626c]"></a>RS</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RS
</UL>
<BR>[Calls]<UL><LI><a href="#[2265b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2266050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[2266230]"></a>REST</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2265b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[22661f4]"></a>SendByteLCDH</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22662a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RW
<LI><a href="#[22662e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E1
</UL>
<BR>[Called By]<UL><LI><a href="#[22661b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWH
</UL>

<P><STRONG><a name="[22661b8]"></a>SPIWH</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22661f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDH
</UL>
<BR>[Called By]<UL><LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[226617c]"></a>WRCommandH</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WRCommandH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22661b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWH
<LI><a href="#[226626c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
<LI><a href="#[226635c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_us
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2265ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[2265d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM
<LI><a href="#[2265d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawModel
<LI><a href="#[2265d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_h
<LI><a href="#[2265df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAMH
<LI><a href="#[2265e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharH
<LI><a href="#[2265ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAMH
<LI><a href="#[2265f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharH
<LI><a href="#[2265fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
<LI><a href="#[2266014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[2266140]"></a>WRDataH</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WRDataH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22661b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWH
<LI><a href="#[226626c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
</UL>
<BR>[Called By]<UL><LI><a href="#[2265ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[2265d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM
<LI><a href="#[2265d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawModel
<LI><a href="#[2265d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_h
<LI><a href="#[2265df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAMH
<LI><a href="#[2265e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharH
<LI><a href="#[2265ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAMH
<LI><a href="#[2265f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharH
<LI><a href="#[2265fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
</UL>

<P><STRONG><a name="[2266104]"></a>SendByteLCDL</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22662a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RW
<LI><a href="#[2266320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2
</UL>
<BR>[Called By]<UL><LI><a href="#[22660c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWL
</UL>

<P><STRONG><a name="[22660c8]"></a>SPIWL</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIWL &rArr; SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[2266104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDL
</UL>
<BR>[Called By]<UL><LI><a href="#[2266050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[226608c]"></a>WRCommandL</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WRCommandL &rArr; SPIWL &rArr; SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22660c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWL
<LI><a href="#[226626c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
<LI><a href="#[226635c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_us
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2265ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[2265d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM
<LI><a href="#[2265d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawModel
<LI><a href="#[2265dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAML
<LI><a href="#[2265e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharL
<LI><a href="#[2265eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAML
<LI><a href="#[2265f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharL
<LI><a href="#[2265f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[2266014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[2266050]"></a>WRDataL</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WRDataL &rArr; SPIWL &rArr; SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22660c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWL
<LI><a href="#[226626c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
</UL>
<BR>[Called By]<UL><LI><a href="#[2265ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[2265d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM
<LI><a href="#[2265d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawModel
<LI><a href="#[2265dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAML
<LI><a href="#[2265e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharL
<LI><a href="#[2265eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAML
<LI><a href="#[2265f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharL
<LI><a href="#[2265f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
</UL>

<P><STRONG><a name="[2266014]"></a>LCDInit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCDInit &rArr; WRCommandL &rArr; SPIWL &rArr; SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
<LI><a href="#[2266398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2265fd8]"></a>ShowQQCharH</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ShowQQCharH &rArr; WRDataH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2265bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE2
<LI><a href="#[2265c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE1
<LI><a href="#[2265c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE
</UL>

<P><STRONG><a name="[2265f9c]"></a>ShowQQCharL</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ShowQQCharL &rArr; WRDataL &rArr; SPIWL &rArr; SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[2266050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[226338c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInterrupts
<LI><a href="#[2265bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE2
<LI><a href="#[2265c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE1
<LI><a href="#[2265c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE
</UL>

<P><STRONG><a name="[2265f60]"></a>ShowNUMCharH</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>
<BR>[Called By]<UL><LI><a href="#[2265c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTEST
</UL>

<P><STRONG><a name="[2265f24]"></a>ShowNUMCharL</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2266050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>
<BR>[Called By]<UL><LI><a href="#[2265c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTEST
</UL>

<P><STRONG><a name="[2265ee8]"></a>WRCGRAMH</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[2265eac]"></a>WRCGRAML</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2266050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[2265e70]"></a>ShowCGCharH</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[2265e34]"></a>ShowCGCharL</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2266050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[2265df8]"></a>CLEARGDRAMH</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CLEARGDRAMH &rArr; WRDataH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2265dbc]"></a>CLEARGDRAML</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CLEARGDRAML &rArr; WRDataL &rArr; SPIWL &rArr; SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[2266050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2265d80]"></a>reg_h</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[2265d44]"></a>DrawModel</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DrawModel &rArr; WRDataL &rArr; SPIWL &rArr; SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[2266050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2265d08]"></a>WRGDRAM</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2266050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[2265ccc]"></a>WRGDRAM1</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2266050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[2266140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[2265c90]"></a>displayTEST</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2265f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharL
<LI><a href="#[2265f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharH
</UL>

<P><STRONG><a name="[2265c54]"></a>displayCHINSE</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2265f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[2265fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
</UL>

<P><STRONG><a name="[2265c18]"></a>displayCHINSE1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2265f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[2265fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
</UL>

<P><STRONG><a name="[2265bdc]"></a>displayCHINSE2</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2265f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[2265fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
</UL>

<P><STRONG><a name="[2265ba0]"></a>displayEngine</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 19264lcddriver.o(.text), UNUSED)

<P><STRONG><a name="[2263440]"></a>UARTSend</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, clienttester.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2262edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[226338c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInterrupts
</UL>

<P><STRONG><a name="[22675e0]"></a>CANHandler</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, clienttester.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CANHandler &rArr; CANIntStatus &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2262edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[22631ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[2263224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[2263404]"></a>CANConfigureNetwork</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, clienttester.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CANConfigureNetwork &rArr; CANMessageSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22630f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22633c8]"></a>ECU_Session_setup</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, clienttester.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ECU_Session_setup &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2262dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[22630f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[2263134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[2263170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageClear
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[226338c]"></a>ProcessInterrupts</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, clienttester.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2262dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[2263134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[2263440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[2265f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[2efb054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[2263350]"></a>DisplayMenu</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, clienttester.o(.text), UNUSED)

<P><STRONG><a name="[2263314]"></a>main</STRONG> (Thumb, 348 bytes, Stack size 40 bytes, clienttester.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; ECU_Session_setup &rArr; usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2262e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFIFODisable
<LI><a href="#[2262ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[2262f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[2262f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[2262f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[2262fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[2263008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[2263044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[2263080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[22630bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[22631e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[2263260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[226329c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[22632d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANBitTimingSet
<LI><a href="#[22633c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECU_Session_setup
<LI><a href="#[2263404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigureNetwork
<LI><a href="#[2265b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[2265b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[2265d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawModel
<LI><a href="#[2265dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAML
<LI><a href="#[2265df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAMH
<LI><a href="#[2265f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[2265fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
<LI><a href="#[2266014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[226608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[226617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
<LI><a href="#[2266398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
<LI><a href="#[2efb054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2efa3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[226293c]"></a>uvsnprintf</STRONG> (Thumb, 738 bytes, Stack size 64 bytes, ustdlib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2efaeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2262900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usnprintf
<LI><a href="#[2262dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
</UL>

<P><STRONG><a name="[2262dec]"></a>usprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, ustdlib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = usprintf &rArr; uvsnprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[226293c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[226338c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInterrupts
<LI><a href="#[22633c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECU_Session_setup
</UL>

<P><STRONG><a name="[2262900]"></a>usnprintf</STRONG> (Thumb, 34 bytes, Stack size 40 bytes, ustdlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[226293c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>

<P><STRONG><a name="[22628c4]"></a>ulocaltime</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, ustdlib.o(.text), UNUSED)

<P><STRONG><a name="[2262888]"></a>ustrtoul</STRONG> (Thumb, 206 bytes, Stack size 20 bytes, ustdlib.o(.text), UNUSED)

<P><STRONG><a name="[226284c]"></a>ustrstr</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ustdlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2efb144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2efb234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>

<P><STRONG><a name="[2efb234]"></a>strncmp</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, strncmp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[226284c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrstr
</UL>

<P><STRONG><a name="[2efb144]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[226284c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrstr
</UL>

<P><STRONG><a name="[2efb054]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[226338c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInterrupts
</UL>

<P><STRONG><a name="[2efb018]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[2efafdc]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[2efafa0]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2efa85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[2efaeb0]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2efa898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[226293c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>

<P><STRONG><a name="[2efad84]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2efad48]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2efad0c]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2efa898]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2efaeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[2efa85c]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2efafa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[2efa820]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[2efa0a0]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2267694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[2ef94ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2efa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2ef9f38]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ef93bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2efa3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2ef94e8]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2ef94ac]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2efa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2ef9470]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2ef7418]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ef7724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[2ef6be4]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[2ef6ba8]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[22632d8]"></a>CANBitTimingSet</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, can.o(i.CANBitTimingSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANBitTimingSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[226329c]"></a>CANEnable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, can.o(i.CANEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CANEnable &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2263260]"></a>CANInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, can.o(i.CANInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANInit &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2263224]"></a>CANIntClear</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, can.o(i.CANIntClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntClear &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22675e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[22631e8]"></a>CANIntEnable</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, can.o(i.CANIntEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntEnable &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22631ac]"></a>CANIntStatus</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, can.o(i.CANIntStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntStatus &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22675e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[2263170]"></a>CANMessageClear</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, can.o(i.CANMessageClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANMessageClear &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22633c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECU_Session_setup
</UL>

<P><STRONG><a name="[2263134]"></a>CANMessageGet</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, can.o(i.CANMessageGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CANMessageGet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[226338c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInterrupts
<LI><a href="#[22633c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECU_Session_setup
</UL>

<P><STRONG><a name="[22630f8]"></a>CANMessageSet</STRONG> (Thumb, 496 bytes, Stack size 40 bytes, can.o(i.CANMessageSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CANMessageSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22633c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECU_Session_setup
<LI><a href="#[2263404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigureNetwork
</UL>

<P><STRONG><a name="[225d3b0]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[2263008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[2263044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[2263080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
</UL>

<P><STRONG><a name="[22630bc]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[2263008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[2263044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[2263080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2263080]"></a>GPIOPinTypeCAN</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeCAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeCAN
</UL>
<BR>[Calls]<UL><LI><a href="#[225d3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[22630bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2263044]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[225d3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[22630bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2263008]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[225d3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[22630bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2265b64]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2266230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REST
<LI><a href="#[226626c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
<LI><a href="#[22662a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RW
<LI><a href="#[22662e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E1
<LI><a href="#[2266320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2
</UL>

<P><STRONG><a name="[225ffc0]"></a>IntDisable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>

<P><STRONG><a name="[2262fcc]"></a>IntEnable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[2260b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
<LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2262f90]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[225b9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2265b28]"></a>SysCtlClockGet</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[226635c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_us
<LI><a href="#[2266398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
</UL>

<P><STRONG><a name="[2262f54]"></a>SysCtlClockSet</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2265aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2262f18]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2262edc]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[2262edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[2262edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[2263440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[22675e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[2262ea0]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[2262ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[2262ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2262e64]"></a>UARTFIFODisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UARTFIFODisable))
<BR><BR>[Called By]<UL><LI><a href="#[2263314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[22677c0]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[22677c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[22677c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[2267784]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2267784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2267784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[2267748]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2267748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2267748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[2260b78]"></a>CANRegRead</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, can.o(i.CANRegRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[225ffc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
<LI><a href="#[2262fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[22630f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[2263134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[2263170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageClear
<LI><a href="#[22631ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[22631e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[2263224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
<LI><a href="#[2263260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[226329c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[22632d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANBitTimingSet
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
