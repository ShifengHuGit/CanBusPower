<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\qs_ek-lm3s8962.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\qs_ek-lm3s8962.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 484]: Last Updated: Mon Feb 15 22:57:05 2021
<BR><P>
<H3>Maximum Stack Usage =        104 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; CANConfigure &rArr; CANConfigureNetwork &rArr; CANMessageSet &rArr; CANRegRead
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[237e3c8]">Reset_Handler</a>
 <LI><a href="#[237e5a8]">NmiSR</a>
 <LI><a href="#[237e56c]">FaultISR</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[23802f4]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23802f4]">UARTCharPut</a><BR>
 <LI><a href="#[237d144]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[237d144]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[238036c]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[238036c]">SysCtlDelay</a><BR>
 <LI><a href="#[237e5a8]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[237e5a8]">NmiSR</a><BR>
 <LI><a href="#[237e56c]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[237e56c]">FaultISR</a><BR>
 <LI><a href="#[237e530]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[237e530]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[237e3c8]">Reset_Handler</a>
 <LI><a href="#[237e5a8]">NmiSR</a>
 <LI><a href="#[237e56c]">FaultISR</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e350]">SysTickIntHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[23806f0]">CANHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237e530]">IntDefaultHandler</a>
 <LI><a href="#[237d48c]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[237e3c8]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2f30518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2f30518]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Calls]<UL><LI><a href="#[2f2ff3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[237e3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[2f304dc]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2f2ff3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f30194]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2f30068]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry6.o(.ARM.Collect$$$$00000006))

<P><STRONG><a name="[238036c]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[238036c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[237d2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[238036c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[23808d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
</UL>

<P><STRONG><a name="[2381e60]"></a>AudioVolume</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[2381adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMSyncUpdate
<LI><a href="#[2381b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
<LI><a href="#[2381b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputInvert
</UL>
<BR>[Called By]<UL><LI><a href="#[2381c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlaySound
<LI><a href="#[2381cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlaySong
<LI><a href="#[2381de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolumeDown
<LI><a href="#[2381e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolumeUp
</UL>

<P><STRONG><a name="[2381e24]"></a>AudioVolumeUp</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioVolumeUp &rArr; AudioVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[2381e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[23806f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[2381de8]"></a>AudioVolumeDown</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AudioVolumeDown &rArr; AudioVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[2381e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[23806f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[2381dac]"></a>AudioVolumeGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio.o(.text), UNUSED)

<P><STRONG><a name="[2381d70]"></a>AudioHandler</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AudioHandler &rArr; AudioMute
</UL>
<BR>[Calls]<UL><LI><a href="#[2381adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMSyncUpdate
<LI><a href="#[2381b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[23825e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>
<BR>[Called By]<UL><LI><a href="#[237e350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[2381d34]"></a>AudioOff</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, audio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23825e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>

<P><STRONG><a name="[2381cf8]"></a>AudioOn</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, audio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2381b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
<LI><a href="#[2381bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[2381c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenDisable
<LI><a href="#[2381c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[23825e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>

<P><STRONG><a name="[2381cbc]"></a>AudioPlaySong</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, audio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2381e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
</UL>

<P><STRONG><a name="[2381c80]"></a>AudioPlaySound</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, audio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2381e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
</UL>

<P><STRONG><a name="[23808d0]"></a>Syswait_ms</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, can_net.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238036c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[23803a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>

<P><STRONG><a name="[2380894]"></a>UARTSend</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, can_net.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23802f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>

<P><STRONG><a name="[2380858]"></a>CANMain</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, can_net.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2380498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[23804d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
</UL>

<P><STRONG><a name="[238081c]"></a>Delay</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, can_net.o(.text), UNUSED)

<P><STRONG><a name="[23807e0]"></a>ProcessInterrupts</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, can_net.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ProcessInterrupts &rArr; CANMessageSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[23802f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[2380498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
</UL>
<BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23807a4]"></a>CANGetTargetVersion</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, can_net.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2380498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[23804d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
</UL>

<P><STRONG><a name="[2380768]"></a>CANUpdateTargetLED</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, can_net.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2380498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
</UL>

<P><STRONG><a name="[238072c]"></a>CANConfigureNetwork</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, can_net.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CANConfigureNetwork &rArr; CANMessageSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2380498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
</UL>
<BR>[Called By]<UL><LI><a href="#[23806b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[23806f0]"></a>CANHandler</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, can_net.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CANHandler &rArr; CANMessageGet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[23802f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[238045c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[23804d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[2380510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageClear
<LI><a href="#[238054c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[23805c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
<LI><a href="#[2381de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolumeDown
<LI><a href="#[2381e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolumeUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[23806b4]"></a>CANConfigure</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, can_net.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CANConfigure &rArr; CANConfigureNetwork &rArr; CANMessageSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2380330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[23803e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[2380420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[2380588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[2380600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[238063c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[2380678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANBitTimingSet
<LI><a href="#[238072c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigureNetwork
</UL>
<BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237efbc]"></a>RandomAddEntropy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, random.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[237e350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[237ef80]"></a>RandomSeed</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, random.o(.text), UNUSED)

<P><STRONG><a name="[237ef44]"></a>RandomNumber</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, random.o(.text), UNUSED)

<P><STRONG><a name="[237e350]"></a>SysTickIntHandler</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, testecumain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SysTickIntHandler &rArr; AudioHandler &rArr; AudioMute
</UL>
<BR>[Calls]<UL><LI><a href="#[237d414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[237efbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RandomAddEntropy
<LI><a href="#[2381d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[237d48c]"></a>main</STRONG> (Thumb, 354 bytes, Stack size 16 bytes, testecumain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = main &rArr; CANConfigure &rArr; CANConfigureNetwork &rArr; CANMessageSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237d108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEnable
<LI><a href="#[237d144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[237d180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[237d1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[237d1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[237d234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPWMClockSet
<LI><a href="#[237d270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlLDOSet
<LI><a href="#[237d2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[237d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[237d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[237d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[237d39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[237d3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[237d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[23802f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[2380330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[23803a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[23806b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
<LI><a href="#[23807e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInterrupts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry6.o(.ARM.Collect$$$$00000006)
</UL>
<P><STRONG><a name="[2f2ff3c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f304dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2f30518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2f2ff00]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2380678]"></a>CANBitTimingSet</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, can.o(i.CANBitTimingSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANBitTimingSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[23806b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[238063c]"></a>CANEnable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, can.o(i.CANEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CANEnable &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[23806b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[2380600]"></a>CANInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, can.o(i.CANInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANInit &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[23806b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[23805c4]"></a>CANIntClear</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, can.o(i.CANIntClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntClear &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[23806f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[2380588]"></a>CANIntEnable</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, can.o(i.CANIntEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntEnable &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[23806b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[238054c]"></a>CANIntStatus</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, can.o(i.CANIntStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntStatus &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[23806f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[2380510]"></a>CANMessageClear</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, can.o(i.CANMessageClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANMessageClear &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[23806f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[23804d4]"></a>CANMessageGet</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, can.o(i.CANMessageGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CANMessageGet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[23806f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
<LI><a href="#[23807a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANGetTargetVersion
<LI><a href="#[2380858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMain
</UL>

<P><STRONG><a name="[2380498]"></a>CANMessageSet</STRONG> (Thumb, 496 bytes, Stack size 40 bytes, can.o(i.CANMessageSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CANMessageSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[238072c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigureNetwork
<LI><a href="#[2380768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANUpdateTargetLED
<LI><a href="#[23807a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANGetTargetVersion
<LI><a href="#[23807e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInterrupts
<LI><a href="#[2380858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMain
</UL>

<P><STRONG><a name="[238045c]"></a>CANStatusGet</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, can.o(i.CANStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANStatusGet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[23806f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[2377d5c]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[237d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[237d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[237d39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[237d3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[2380420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
</UL>

<P><STRONG><a name="[237d450]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[237d324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[237d360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[237d39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[237d3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2380420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
</UL>

<P><STRONG><a name="[237d414]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[237e350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[2380420]"></a>GPIOPinTypeCAN</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeCAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeCAN
</UL>
<BR>[Calls]<UL><LI><a href="#[2377d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[237d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[23806b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[237d3d8]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[2377d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[237d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237d39c]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[2377d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[237d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237d360]"></a>GPIOPinTypePWM</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypePWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypePWM
</UL>
<BR>[Calls]<UL><LI><a href="#[2377d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[237d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237d324]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[2377d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[237d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237d2e8]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237a96c]"></a>IntDisable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>

<P><STRONG><a name="[23803e4]"></a>IntEnable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[237b4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
<LI><a href="#[23806b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[2381c44]"></a>PWMGenConfigure</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, pwm.o(i.PWMGenConfigure), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2381cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
</UL>

<P><STRONG><a name="[2381c08]"></a>PWMGenDisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(i.PWMGenDisable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2381cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
</UL>

<P><STRONG><a name="[2381bcc]"></a>PWMGenEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(i.PWMGenEnable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2381cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
</UL>

<P><STRONG><a name="[2381b90]"></a>PWMGenPeriodSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pwm.o(i.PWMGenPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[2381d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHandler
<LI><a href="#[23825e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>

<P><STRONG><a name="[2381b54]"></a>PWMOutputInvert</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputInvert))
<BR><BR>[Called By]<UL><LI><a href="#[2381e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
<LI><a href="#[23825e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>

<P><STRONG><a name="[2381b18]"></a>PWMOutputState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputState))
<BR><BR>[Called By]<UL><LI><a href="#[2381cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
<LI><a href="#[2381e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
<LI><a href="#[23825e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>

<P><STRONG><a name="[2381adc]"></a>PWMSyncUpdate</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pwm.o(i.PWMSyncUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[2381d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHandler
<LI><a href="#[2381e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioVolume
<LI><a href="#[23825e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioMute
</UL>

<P><STRONG><a name="[23803a8]"></a>SysCtlClockGet</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[23808d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
</UL>

<P><STRONG><a name="[237d2ac]"></a>SysCtlClockSet</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[238036c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237d270]"></a>SysCtlLDOSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlLDOSet))
<BR><BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237d234]"></a>SysCtlPWMClockSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPWMClockSet))
<BR><BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2380330]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[23806b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigure
</UL>

<P><STRONG><a name="[237d1f8]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237d1bc]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237d180]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23802f4]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[23802f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[23802f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[23806f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
<LI><a href="#[23807e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInterrupts
<LI><a href="#[2380894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>

<P><STRONG><a name="[237d144]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[237d144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[237d144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237d108]"></a>UARTEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.UARTEnable))
<BR><BR>[Called By]<UL><LI><a href="#[237d48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f2fb7c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2f2fb40]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2f2fb04]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[23825e0]"></a>AudioMute</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AudioMute
</UL>
<BR>[Calls]<UL><LI><a href="#[2381adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMSyncUpdate
<LI><a href="#[2381b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
<LI><a href="#[2381b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputInvert
<LI><a href="#[2381b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2381cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOn
<LI><a href="#[2381d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioOff
<LI><a href="#[2381d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioHandler
</UL>

<P><STRONG><a name="[237e5a8]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[237e5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[237e5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[237e56c]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[237e56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[237e56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[237e530]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[237e530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[237e530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[237b4e8]"></a>CANRegRead</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, can.o(i.CANRegRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[237a96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
<LI><a href="#[23803e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[238045c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[2380498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[23804d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[2380510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageClear
<LI><a href="#[238054c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[2380588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[23805c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
<LI><a href="#[2380600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[238063c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[2380678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANBitTimingSet
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
