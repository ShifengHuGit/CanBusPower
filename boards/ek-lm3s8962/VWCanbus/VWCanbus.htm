<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [G:\Git\CanBusPower\boards\ek-lm3s8962\VWCanbus\VWCanbus.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image G:\Git\CanBusPower\boards\ek-lm3s8962\VWCanbus\VWCanbus.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 484]: Last Updated: Sun Feb 07 18:25:47 2021
<BR><P>
<H3>Maximum Stack Usage =        112 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Init_VW &rArr; ShowQQCharH &rArr; WRDataH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[22b561c]">Reset_Handler</a>
 <LI><a href="#[22b5694]">__user_initial_stackheap</a>
 <LI><a href="#[22b57c0]">NmiSR</a>
 <LI><a href="#[22b5784]">FaultISR</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[22b57c0]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22b57c0]">NmiSR</a><BR>
 <LI><a href="#[22b5784]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22b5784]">FaultISR</a><BR>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22b5748]">IntDefaultHandler</a><BR>
 <LI><a href="#[22b318c]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22b318c]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[22b23b8]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22b23b8]">SysCtlDelay</a><BR>
 <LI><a href="#[22b31c8]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22b31c8]">UARTCharPut</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[22b561c]">Reset_Handler</a>
 <LI><a href="#[22b57c0]">NmiSR</a>
 <LI><a href="#[22b5784]">FaultISR</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[22b5748]">IntDefaultHandler</a>
 <LI><a href="#[2e9f10c]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[22b561c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2ea3144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2ea3144]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2e9ca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2ea3018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[22b561c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[2e9ca60]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2ea3144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2e9ca24]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea3018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2e9c9e8]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2e9c9ac]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2e9cb8c]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[2e9cb50]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[2e9c808]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2ea2064]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2ea29c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[2ea0534]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[2ea05ac]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[2ea096c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[2ea0804]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[2ea0444]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[2ea04bc]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[2ea087c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[2ea078c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[2ea0d68]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[2ea0bc4]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[2ea0b4c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[2ea0ad4]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[2ea0a5c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[2ea09e4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[2ea0c78]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[2ea0408]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[2ea08f4]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[2ea0714]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[2ea0cf0]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[2e9f454]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e9fc88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[2e9e7e8]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[2e9e608]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[2e9e5cc]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[2e9e734]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[2e9e89c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[2e9e6bc]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[2ea3018]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e9ca24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2ea3144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2ea2a78]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2ea26f4]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea25c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2ea29c4]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2ea2064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[2ea2a00]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2ea2910]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Init_VW &rArr; ShowQQCharH &rArr; WRDataH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2ea2460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2ea294c]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2ea18e4]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2ea2460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2e9fc88]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2e9f454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[2e9fcc4]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[2e9fc4c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2e9f940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[22b23b8]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[22b23b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[22b23b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[22b2a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_us
<LI><a href="#[22b2a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
<LI><a href="#[22b32f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
</UL>

<P><STRONG><a name="[22aaff0]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[22aafb4]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[22b3420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[2ea816c]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[22b5694]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea25c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[22b39c0]"></a>SysTickIntHandler</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, vwmain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b3498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[22b3588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>

<P><STRONG><a name="[22b3984]"></a>UARTSend</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, vwmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTSend
</UL>
<BR>[Calls]<UL><LI><a href="#[22b31c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[22b3858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_VW
<LI><a href="#[22b3894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
</UL>

<P><STRONG><a name="[22b3948]"></a>CANHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, vwmain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b36b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[22b372c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
</UL>

<P><STRONG><a name="[22b390c]"></a>FrameSend</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, vwmain.o(.text), UNUSED)

<P><STRONG><a name="[22b38d0]"></a>CANConfigureNetwork</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, vwmain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b3894]"></a>ProcessCmd</STRONG> (Thumb, 930 bytes, Stack size 80 bytes, vwmain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b309c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
<LI><a href="#[22b336c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[22b33a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
<LI><a href="#[22b3498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[22b3600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[22b3678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[22b3984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[2ea357c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[22b3858]"></a>Init_VW</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, vwmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Init_VW &rArr; ShowQQCharH &rArr; WRDataH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
<LI><a href="#[22b33a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
<LI><a href="#[22b363c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[22b3678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[22b3984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b381c]"></a>main</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, vwmain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = main &rArr; Init_VW &rArr; ShowQQCharH &rArr; WRDataH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b3150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFIFODisable
<LI><a href="#[22b318c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[22b3204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[22b3240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[22b327c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[22b32b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[22b32f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[22b3330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[22b33e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[22b3420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[22b345c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[22b3498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[22b34d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[22b3510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[22b354c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[22b35c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[22b36f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[22b3768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[22b37a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[22b37e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANBitTimingSet
<LI><a href="#[22b3858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_VW
<LI><a href="#[22b38d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANConfigureNetwork
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[22b2a48]"></a>Syswait_ms</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Syswait_ms &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[22b23b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[22b3330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[22b33e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[22b2a0c]"></a>Syswait_us</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Syswait_us &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[22b23b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[22b3330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[22b2778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[22b29d0]"></a>E2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = E2
</UL>
<BR>[Calls]<UL><LI><a href="#[22b3498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[22b27f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDL
</UL>

<P><STRONG><a name="[22b2994]"></a>E1</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = E1
</UL>
<BR>[Calls]<UL><LI><a href="#[22b3498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[22b28a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDH
</UL>

<P><STRONG><a name="[22b2958]"></a>RW</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b3498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[22b27f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDL
<LI><a href="#[22b28a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDH
</UL>

<P><STRONG><a name="[22b291c]"></a>RS</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RS
</UL>
<BR>[Calls]<UL><LI><a href="#[22b3498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[22b273c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[22b2778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[22b282c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[22b28e0]"></a>REST</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b3498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[22b28a4]"></a>SendByteLCDH</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b2958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RW
<LI><a href="#[22b2994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E1
</UL>
<BR>[Called By]<UL><LI><a href="#[22b2868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWH
</UL>

<P><STRONG><a name="[22b2868]"></a>SPIWH</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b28a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDH
</UL>
<BR>[Called By]<UL><LI><a href="#[22b282c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[22b3114]"></a>WRCommandH</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WRCommandH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b2868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWH
<LI><a href="#[22b291c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
<LI><a href="#[22b2a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_us
</UL>
<BR>[Called By]<UL><LI><a href="#[22b2520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[22b2598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAMH
<LI><a href="#[22b2610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharH
<LI><a href="#[22b2688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAMH
<LI><a href="#[22b2700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharH
<LI><a href="#[22b33a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
<LI><a href="#[22b33e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[22b3858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_VW
<LI><a href="#[22b3894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
</UL>

<P><STRONG><a name="[22b282c]"></a>WRDataH</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WRDataH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b2868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWH
<LI><a href="#[22b291c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
</UL>
<BR>[Called By]<UL><LI><a href="#[22b2520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[22b2598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAMH
<LI><a href="#[22b2610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharH
<LI><a href="#[22b2688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAMH
<LI><a href="#[22b2700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharH
<LI><a href="#[22b33a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
</UL>

<P><STRONG><a name="[22b27f0]"></a>SendByteLCDL</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b2958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RW
<LI><a href="#[22b29d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2
</UL>
<BR>[Called By]<UL><LI><a href="#[22b27b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWL
</UL>

<P><STRONG><a name="[22b27b4]"></a>SPIWL</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIWL &rArr; SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b27f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByteLCDL
</UL>
<BR>[Called By]<UL><LI><a href="#[22b273c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[22b2778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[22b2778]"></a>WRCommandL</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WRCommandL &rArr; SPIWL &rArr; SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b27b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWL
<LI><a href="#[22b291c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
<LI><a href="#[22b2a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_us
</UL>
<BR>[Called By]<UL><LI><a href="#[22b2520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[22b255c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAML
<LI><a href="#[22b25d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharL
<LI><a href="#[22b264c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAML
<LI><a href="#[22b26c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharL
<LI><a href="#[22b336c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[22b33e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[22b273c]"></a>WRDataL</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b27b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWL
<LI><a href="#[22b291c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
</UL>
<BR>[Called By]<UL><LI><a href="#[22b2520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRGDRAM1
<LI><a href="#[22b255c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLEARGDRAML
<LI><a href="#[22b25d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCGCharL
<LI><a href="#[22b264c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCGRAML
<LI><a href="#[22b26c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharL
<LI><a href="#[22b336c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
</UL>

<P><STRONG><a name="[22b33e4]"></a>LCDInit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCDInit &rArr; WRCommandL &rArr; SPIWL &rArr; SendByteLCDL &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b2778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[22b2a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b33a8]"></a>ShowQQCharH</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, 19264lcddriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ShowQQCharH &rArr; WRDataH &rArr; SPIWH &rArr; SendByteLCDH &rArr; RW
</UL>
<BR>[Calls]<UL><LI><a href="#[22b282c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>
<BR>[Called By]<UL><LI><a href="#[22b23f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayEngine
<LI><a href="#[22b2430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE2
<LI><a href="#[22b246c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE1
<LI><a href="#[22b24a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE
<LI><a href="#[22b3858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_VW
<LI><a href="#[22b3894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
</UL>

<P><STRONG><a name="[22b336c]"></a>ShowQQCharL</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b273c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[22b2778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>
<BR>[Called By]<UL><LI><a href="#[22b23f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayEngine
<LI><a href="#[22b2430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE2
<LI><a href="#[22b246c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE1
<LI><a href="#[22b24a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayCHINSE
<LI><a href="#[22b3894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
</UL>

<P><STRONG><a name="[22b2700]"></a>ShowNUMCharH</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b282c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>
<BR>[Called By]<UL><LI><a href="#[22b24e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTEST
</UL>

<P><STRONG><a name="[22b26c4]"></a>ShowNUMCharL</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b273c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[22b2778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>
<BR>[Called By]<UL><LI><a href="#[22b24e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTEST
</UL>

<P><STRONG><a name="[22b2688]"></a>WRCGRAMH</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b282c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[22b264c]"></a>WRCGRAML</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b273c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[22b2778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[22b2610]"></a>ShowCGCharH</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b282c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[22b25d4]"></a>ShowCGCharL</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b273c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[22b2778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[22b2598]"></a>CLEARGDRAMH</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b282c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[22b255c]"></a>CLEARGDRAML</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b273c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[22b2778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
</UL>

<P><STRONG><a name="[22b2520]"></a>WRGDRAM1</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b273c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataL
<LI><a href="#[22b2778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandL
<LI><a href="#[22b282c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDataH
<LI><a href="#[22b3114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRCommandH
</UL>

<P><STRONG><a name="[22b24e4]"></a>displayTEST</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b26c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharL
<LI><a href="#[22b2700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNUMCharH
</UL>

<P><STRONG><a name="[22b24a8]"></a>displayCHINSE</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b336c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[22b33a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
</UL>

<P><STRONG><a name="[22b246c]"></a>displayCHINSE1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b336c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[22b33a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
</UL>

<P><STRONG><a name="[22b2430]"></a>displayCHINSE2</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b336c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[22b33a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
</UL>

<P><STRONG><a name="[22b23f4]"></a>displayEngine</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, 19264lcddriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b336c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharL
<LI><a href="#[22b33a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQQCharH
</UL>

<P><STRONG><a name="[22b1f08]"></a>uvsnprintf</STRONG> (Thumb, 738 bytes, Stack size 64 bytes, ustdlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea33d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[22b1ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usnprintf
<LI><a href="#[22b309c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
</UL>

<P><STRONG><a name="[22b309c]"></a>usprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, ustdlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b1f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[22b3894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
</UL>

<P><STRONG><a name="[22b1ecc]"></a>usnprintf</STRONG> (Thumb, 34 bytes, Stack size 40 bytes, ustdlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b1f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>

<P><STRONG><a name="[22b1e90]"></a>ulocaltime</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, ustdlib.o(.text), UNUSED)

<P><STRONG><a name="[22b1e54]"></a>ustrtoul</STRONG> (Thumb, 206 bytes, Stack size 20 bytes, ustdlib.o(.text), UNUSED)

<P><STRONG><a name="[22b1e18]"></a>ustrstr</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ustdlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea366c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ea375c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>

<P><STRONG><a name="[2ea375c]"></a>strncmp</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, strncmp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22b1e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrstr
</UL>

<P><STRONG><a name="[2ea366c]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22b1e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrstr
</UL>

<P><STRONG><a name="[2ea357c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22b3894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
</UL>

<P><STRONG><a name="[2ea3540]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[2ea3504]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[2ea34c8]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ea2d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[2ea33d8]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea2dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[22b1f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>

<P><STRONG><a name="[2ea32ac]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2ea3270]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2ea3234]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2ea2dc0]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ea33d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[2ea2d84]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea34c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[2ea2d48]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[2ea25c8]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[22b5694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[2ea19d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea26f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2ea2460]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ea18e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea2910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2ea1a10]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2ea19d4]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea25c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2ea1998]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2e9f940]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e9fc4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[2e9f10c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[2e9f0d0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[22b37e0]"></a>CANBitTimingSet</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, can.o(i.CANBitTimingSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANBitTimingSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b37a4]"></a>CANEnable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, can.o(i.CANEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CANEnable &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b3768]"></a>CANInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, can.o(i.CANInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANInit &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b372c]"></a>CANIntClear</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, can.o(i.CANIntClear), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22b3948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[22b36f0]"></a>CANIntEnable</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, can.o(i.CANIntEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CANIntEnable &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b36b4]"></a>CANIntStatus</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, can.o(i.CANIntStatus), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22b3948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANHandler
</UL>

<P><STRONG><a name="[22b3678]"></a>CANMessageGet</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, can.o(i.CANMessageGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CANMessageGet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22b3858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_VW
<LI><a href="#[22b3894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
</UL>

<P><STRONG><a name="[22b363c]"></a>CANMessageSet</STRONG> (Thumb, 496 bytes, Stack size 40 bytes, can.o(i.CANMessageSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CANMessageSet &rArr; CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22b3858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_VW
</UL>

<P><STRONG><a name="[22b3600]"></a>CANStatusGet</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, can.o(i.CANStatusGet), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22b3894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
</UL>

<P><STRONG><a name="[22ac97c]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[22b34d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[22b3510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[22b354c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
</UL>

<P><STRONG><a name="[22b35c4]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[22b34d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[22b3510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[22b354c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b3588]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22b39c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[22b354c]"></a>GPIOPinTypeCAN</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeCAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeCAN
</UL>
<BR>[Calls]<UL><LI><a href="#[22ac97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[22b35c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b3510]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[22ac97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[22b35c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b34d4]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[22ac97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[22b35c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b3498]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[22b28e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REST
<LI><a href="#[22b291c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS
<LI><a href="#[22b2958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RW
<LI><a href="#[22b2994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E1
<LI><a href="#[22b29d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2
<LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[22b3894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCmd
<LI><a href="#[22b39c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[22af58c]"></a>IntDisable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
</UL>

<P><STRONG><a name="[22b345c]"></a>IntEnable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[22b0144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANRegRead
<LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b3420]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[22aafb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b3330]"></a>SysCtlClockGet</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[22b2a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_us
<LI><a href="#[22b2a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syswait_ms
<LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b32f4]"></a>SysCtlClockSet</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[22b23b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b32b8]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b327c]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b3240]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b3204]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b31c8]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[22b31c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[22b31c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[22b3984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>

<P><STRONG><a name="[22b318c]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[22b318c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[22b318c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22b3150]"></a>UARTFIFODisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UARTFIFODisable))
<BR><BR>[Called By]<UL><LI><a href="#[22b381c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[22b57c0]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[22b57c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[22b57c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[22b5784]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[22b5784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[22b5784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[22b5748]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[22b5748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22b5748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[22b0144]"></a>CANRegRead</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, can.o(i.CANRegRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CANRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22af58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
<LI><a href="#[22b345c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[22b3600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[22b363c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageSet
<LI><a href="#[22b3678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANMessageGet
<LI><a href="#[22b36b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[22b36f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[22b372c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
<LI><a href="#[22b3768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[22b37a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[22b37e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANBitTimingSet
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
